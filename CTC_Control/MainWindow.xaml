<Fluent:RibbonWindow
    x:Class="CTC_Control.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Fluent="urn:fluent-ribbon"
    xmlns:c="clr-namespace:CTC_Control.Classes.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helper="clr-namespace:CTC_Control.Classes.Helper"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:CTC_Control"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewmodel="clr-namespace:CTC_Control.ViewModel"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Title="CTC仿真总控"
    Width="800"
    Height="600"
    d:DataContext="{d:DesignInstance Type=viewmodel:MainViewModel}"
    IsIconVisible="False"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding MainCloseCMD}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid.Resources>
            <c:NotConv x:Key="notConv" />
        </Grid.Resources>
        <xctk:BusyIndicator BusyContent="请等待..." IsBusy="{Binding IsBusy}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Fluent:Ribbon
                    x:Name="ribbon"
                    Grid.Row="0"
                    AutomaticStateManagement="True"
                    CanMinimize="False"
                    IsQuickAccessToolBarVisible="False">
                    <Fluent:RibbonTabItem Header="数据管理">
                        <Fluent:RibbonGroupBox Header="连接数据库">
                            <StackPanel
                                Margin="0,0,5,0"
                                IsEnabled="{Binding DbConnected, Converter={StaticResource notConv}}"
                                Orientation="Vertical">
                                <StackPanel Margin="0,5" Orientation="Horizontal">
                                    <TextBlock
                                        Margin="2,0"
                                        VerticalAlignment="Center"
                                        Text="IP地址" />
                                    <TextBox
                                        MinWidth="120"
                                        MaxWidth="200"
                                        Text="{Binding IpAddress, Mode=TwoWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,5" Orientation="Horizontal">
                                    <TextBlock
                                        Margin="2,0"
                                        VerticalAlignment="Center"
                                        Text="端口号" />
                                    <TextBox Width="60" Text="{Binding Port, Mode=TwoWay}" />
                                </StackPanel>
                            </StackPanel>

                            <StackPanel
                                Margin="5,0,5,0"
                                IsEnabled="{Binding DbConnected, Converter={StaticResource notConv}}"
                                Orientation="Vertical">
                                <StackPanel Margin="0,5" Orientation="Horizontal">
                                    <TextBlock
                                        Width="40"
                                        Margin="2,0"
                                        VerticalAlignment="Center"
                                        Text="用户名" />
                                    <TextBox Width="100" Text="{Binding User, Mode=TwoWay}" />
                                </StackPanel>
                                <StackPanel Margin="0,5" Orientation="Horizontal">
                                    <TextBlock
                                        Width="40"
                                        Margin="2,0"
                                        VerticalAlignment="Center"
                                        Text="密   码" />
                                    <PasswordBox
                                        Width="100"
                                        helper:PasswordBoxHelper.Attach="True"
                                        helper:PasswordBoxHelper.Password="{Binding Password, Mode=TwoWay}" />
                                </StackPanel>
                            </StackPanel>

                            <Fluent:Button
                                Margin="5"
                                Command="{Binding LogInCMD}"
                                Header="登录"
                                IsEnabled="{Binding DbConnected, Converter={StaticResource notConv}}"
                                LargeIcon="Pictures/LogIn.png" />
                            <Fluent:Button
                                Margin="5"
                                Command="{Binding LogOutCMD}"
                                Header="注销"
                                IsEnabled="{Binding DbConnected}"
                                LargeIcon="Pictures/LogOut.png" />
                        </Fluent:RibbonGroupBox>
                    </Fluent:RibbonTabItem>

                    <Fluent:RibbonTabItem
                        Header="仿真管理"
                        IsEnabled="{Binding DbConnected}"
                        IsSelected="True">
                        <Fluent:RibbonGroupBox Header="仿真操作">
                            <Fluent:Button
                                Margin="5"
                                Command="{Binding SimStartCMD}"
                                Header="开始"
                                LargeIcon="Pictures/SimStart.png" />
                            <Fluent:Button
                                Margin="5"
                                Command="{Binding SimPauseCMD}"
                                Header="暂停"
                                LargeIcon="Pictures/SimPause.png" />
                            <Fluent:Button
                                Margin="5"
                                Command="{Binding SimContiCMD}"
                                Header="继续"
                                LargeIcon="Pictures/SimConti.png" />
                            <Fluent:Button
                                Margin="5"
                                Command="{Binding SimEndCMD}"
                                Header="结束"
                                LargeIcon="Pictures/SimEnd.png" />
                        </Fluent:RibbonGroupBox>
                        <Fluent:RibbonGroupBox Header="参数设置" IsEnabled="{Binding SimEnd}">
                            <StackPanel Margin="0,5" Orientation="Horizontal">
                                <TextBlock
                                    Margin="5,0"
                                    VerticalAlignment="Center"
                                    Text="仿真速率" />
                                <ComboBox
                                    Width="50"
                                    ItemsSource="{Binding SimSpeedItems}"
                                    SelectedIndex="{Binding SimSpeedIdx, Mode=TwoWay}" />
                            </StackPanel>
                            <StackPanel Margin="0,5" Orientation="Horizontal">
                                <TextBlock
                                    Margin="5,0"
                                    VerticalAlignment="Center"
                                    Text="开始时间" />
                                <xctk:DateTimePicker
                                    MinWidth="50"
                                    AutoCloseCalendar="True"
                                    Format="Custom"
                                    FormatString="HH:mm:ss yyyy/MM/dd"
                                    Value="{Binding SimTime, Mode=TwoWay}" />
                            </StackPanel>
                        </Fluent:RibbonGroupBox>
                        <Fluent:RibbonGroupBox Header="飞车">
                            <TextBlock Text="暂时预留" />
                        </Fluent:RibbonGroupBox>
                    </Fluent:RibbonTabItem>

                    <Fluent:RibbonTabItem Header="参数设置">
                        <Fluent:RibbonGroupBox Header="模块勾选">
                            <Fluent:CheckBox Header="RBC" />
                            <Fluent:CheckBox Header="CTC" />
                            <Fluent:CheckBox Header="轨旁设备" />
                            <Fluent:CheckBox Header="车载" />
                            <Fluent:CheckBox Header="TSRS" />
                            <Fluent:CheckBox Header="CBI" />
                        </Fluent:RibbonGroupBox>
                        <Fluent:RibbonGroupBox Header="故障产生">
                            <TextBlock Text="暂时预留" />
                        </Fluent:RibbonGroupBox>
                    </Fluent:RibbonTabItem>

                    <Fluent:RibbonTabItem Header="信息查看" />
                </Fluent:Ribbon>

                <TabControl Grid.Row="1" Background="Transparent">
                    <TabControl.Resources>
                        <Style x:Key="{x:Type Fluent:Button}" TargetType="{x:Type Fluent:Button}">
                            <Setter Property="BorderBrush" Value="{DynamicResource Fluent.Ribbon.Brushes.AccentColorBrush80}" />
                            <Setter Property="BorderThickness" Value="1" />
                        </Style>

                        <Style x:Key="TabItemFocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle
                                            Margin="3,3,3,1"
                                            SnapsToDevicePixels="true"
                                            Stroke="Black"
                                            StrokeDashArray="1 2"
                                            StrokeThickness="1" />
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94" />

                        <SolidColorBrush x:Key="TabItemHotBackground" Color="{DynamicResource Fluent.Ribbon.Colors.AccentColor60}" />
                        <SolidColorBrush x:Key="TabItemSelectedBackground" Color="{DynamicResource Gray7}" />
                        <SolidColorBrush x:Key="TabItemDisabledBackground" Color="{DynamicResource Gray9}" />
                        <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="{DynamicResource Fluent.Ribbon.Colors.AccentColor80}" />
                        <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="{DynamicResource Gray10}" />

                        <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}" />
                            <Setter Property="Padding" Value="6,1,6,1" />
                            <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}" />
                            <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Stretch" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TabItem}">
                                        <Grid SnapsToDevicePixels="true">
                                            <Border
                                                Name="Bd"
                                                Padding="{TemplateBinding Padding}"
                                                Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="1,1,1,0">
                                                <ContentPresenter
                                                    Name="Content"
                                                    HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                    VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                    ContentSource="Header"
                                                    RecognizesAccessKey="True"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Border>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemHotBackground}" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <Setter Property="Panel.ZIndex" Value="1" />
                                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemSelectedBackground}" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="false" />
                                                    <Condition Property="IsMouseOver" Value="true" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TabItemHotBorderBrush}" />
                                            </MultiTrigger>
                                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                                <Setter TargetName="Bd" Property="BorderThickness" Value="1,0,1,1" />
                                            </Trigger>
                                            <Trigger Property="TabStripPlacement" Value="Left">
                                                <Setter TargetName="Bd" Property="BorderThickness" Value="1,1,0,1" />
                                            </Trigger>
                                            <Trigger Property="TabStripPlacement" Value="Right">
                                                <Setter TargetName="Bd" Property="BorderThickness" Value="0,1,1,1" />
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="TabStripPlacement" Value="Top" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Margin" Value="-2,-2,-2,-1" />
                                                <Setter TargetName="Content" Property="Margin" Value="0,0,0,1" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="TabStripPlacement" Value="Bottom" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Margin" Value="-2,-1,-2,-2" />
                                                <Setter TargetName="Content" Property="Margin" Value="0,1,0,0" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="TabStripPlacement" Value="Left" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Margin" Value="-2,-2,-1,-2" />
                                                <Setter TargetName="Content" Property="Margin" Value="0,0,1,0" />
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true" />
                                                    <Condition Property="TabStripPlacement" Value="Right" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Margin" Value="-1,-2,-2,-2" />
                                                <Setter TargetName="Content" Property="Margin" Value="1,0,0,0" />
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter TargetName="Bd" Property="Background" Value="{StaticResource TabItemDisabledBackground}" />
                                                <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource TabItemDisabledBorderBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabControl.Resources>
                    <TabItem Header="数据库" />
                    <TabItem Header="文本信息" />
                </TabControl>

                <Fluent:StatusBar
                    Grid.Row="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom">
                    <Fluent:StatusBarItem Margin="10,0" HorizontalAlignment="Left">
                        <Fluent:StatusBarItem.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="5,0" Text="{Binding LocalTimeText}" />
                                <TextBlock Margin="10,0" Text="{Binding SimText}" />
                            </StackPanel>
                        </Fluent:StatusBarItem.Content>
                    </Fluent:StatusBarItem>
                </Fluent:StatusBar>
            </Grid>
        </xctk:BusyIndicator>
    </Grid>
</Fluent:RibbonWindow>
